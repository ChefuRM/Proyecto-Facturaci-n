package Interfaces;

import Clases.cProveedor;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;

public class pProveedores extends javax.swing.JPanel {

    /**
     * Creates new form pProveedor
     */
    cProveedor ProveedorEncontrado = null;

    public static ArrayList<cProveedor> getArregloP() {
        return ArregloP;
    }
    private static ArrayList<cProveedor> ArregloP = new ArrayList<cProveedor>();

    public pProveedores() {
        initComponents();
        leerbinario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lProveedores = new javax.swing.JLabel();
        eCodigoP = new javax.swing.JLabel();
        eNitP = new javax.swing.JLabel();
        eNombreP = new javax.swing.JLabel();
        eDireccionP = new javax.swing.JLabel();
        eCelularP = new javax.swing.JLabel();
        tCodigoP = new javax.swing.JTextField();
        tNitP = new javax.swing.JTextField();
        tNombreP = new javax.swing.JTextField();
        tDireccionP = new javax.swing.JTextField();
        tCelularP = new javax.swing.JTextField();
        bAgregarP = new javax.swing.JButton();
        bEliminarP = new javax.swing.JButton();
        bBuscarP = new javax.swing.JButton();
        bModificarP = new javax.swing.JButton();
        bReporteP = new javax.swing.JButton();

        lProveedores.setText("Proveedores");

        eCodigoP.setText("Codigo de Proveedor:");

        eNitP.setText("Nit de Proveedor:");

        eNombreP.setText("Nombre de Proveedor:");

        eDireccionP.setText("Direccion de Proveedor:");

        eCelularP.setText("Celular de Proveedor:");

        bAgregarP.setText("Agregar");
        bAgregarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarPActionPerformed(evt);
            }
        });

        bEliminarP.setText("Eliminar");
        bEliminarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarPActionPerformed(evt);
            }
        });

        bBuscarP.setText("Buscar");
        bBuscarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarPActionPerformed(evt);
            }
        });

        bModificarP.setText("Modificar");
        bModificarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarPActionPerformed(evt);
            }
        });

        bReporteP.setText("Reporte");
        bReporteP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReportePActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lProveedores)
                .addGap(257, 257, 257))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eCodigoP)
                            .addComponent(eNitP)
                            .addComponent(eNombreP)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bAgregarP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bModificarP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(eCelularP))
                        .addGap(6, 6, 6))
                    .addComponent(eDireccionP, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tDireccionP)
                            .addComponent(tCodigoP, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tNitP, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tNombreP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                            .addComponent(tCelularP, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bReporteP))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(bEliminarP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                                .addComponent(bBuscarP)))
                        .addGap(54, 54, 54))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lProveedores)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eCodigoP)
                    .addComponent(tCodigoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eNitP)
                    .addComponent(tNitP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eNombreP)
                    .addComponent(tNombreP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eDireccionP)
                    .addComponent(tDireccionP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tCelularP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eCelularP))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAgregarP)
                    .addComponent(bEliminarP)
                    .addComponent(bBuscarP))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bModificarP)
                    .addComponent(bReporteP))
                .addContainerGap(183, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bAgregarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarPActionPerformed
        // TODO add your handling code here:        
        if (!buscarN(tNombreP.getText())) {
            cProveedor oProveedores = new cProveedor();
            oProveedores.setCodigoProveedorP(tCodigoP.getText());
            oProveedores.setNitProveedor(tNitP.getText());
            oProveedores.setNombreProveedor(tNombreP.getText());
            oProveedores.setDireccionProveedor(tDireccionP.getText());
            oProveedores.setCelularProveedor(tCelularP.getText());
            JOptionPane.showMessageDialog(null, "Proveedor Agregado", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
            ArregloP.add(oProveedores);
        } else {
            JOptionPane.showMessageDialog(null, "Proveedor Existente", "MENSAJE", JOptionPane.ERROR_MESSAGE);
        }
        setteo();
        crearbinario();
    }//GEN-LAST:event_bAgregarPActionPerformed

    private void bEliminarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarPActionPerformed
        // TODO add your handling code here:
        if (eliminarP(ProveedorEncontrado) && ProveedorEncontrado != null) {
            JOptionPane.showMessageDialog(null, "Proveedor Eliminado Correctamente", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
            setteo();
            crearbinario();
        } else {
            JOptionPane.showMessageDialog(null, "Proveedor No Eliminado", "MENSAJE", JOptionPane.ERROR_MESSAGE);
            setteo();
        }
    }//GEN-LAST:event_bEliminarPActionPerformed

    private void bBuscarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarPActionPerformed
        // TODO add your handling code here:
        ProveedorEncontrado = buscarP(tCodigoP.getText());
        if (ProveedorEncontrado != null) {
            tCodigoP.setText(ProveedorEncontrado.getCodigoProveedorP());
            tNitP.setText(ProveedorEncontrado.getNitProveedor());
            tNombreP.setText(ProveedorEncontrado.getNombreProveedor());
            tDireccionP.setText(ProveedorEncontrado.getDireccionProveedor());
            tCelularP.setText(ProveedorEncontrado.getCelularProveedor());
        } else {
            setteo();
            JOptionPane.showMessageDialog(null, "Proveedor no encontrado", "MENSAJE", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bBuscarPActionPerformed

    private void bModificarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarPActionPerformed
        // TODO add your handling code here:
        if (modificarP(ProveedorEncontrado) && ProveedorEncontrado != null) {

            JOptionPane.showMessageDialog(null, "Proveedor Modificado Correctamente", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
            setteo();
            crearbinario();
        } else {
            JOptionPane.showMessageDialog(null, "Proveedor No Modificado", "MENSAJE", JOptionPane.ERROR_MESSAGE);
            setteo();
        }
    }//GEN-LAST:event_bModificarPActionPerformed

    private void bReportePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReportePActionPerformed
        // TODO add your handling code here:
        html();
    }//GEN-LAST:event_bReportePActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregarP;
    private javax.swing.JButton bBuscarP;
    private javax.swing.JButton bEliminarP;
    private javax.swing.JButton bModificarP;
    private javax.swing.JButton bReporteP;
    private javax.swing.JLabel eCelularP;
    private javax.swing.JLabel eCodigoP;
    private javax.swing.JLabel eDireccionP;
    private javax.swing.JLabel eNitP;
    private javax.swing.JLabel eNombreP;
    private javax.swing.JLabel lProveedores;
    private javax.swing.JTextField tCelularP;
    private javax.swing.JTextField tCodigoP;
    private javax.swing.JTextField tDireccionP;
    private javax.swing.JTextField tNitP;
    private javax.swing.JTextField tNombreP;
    // End of variables declaration//GEN-END:variables

    private cProveedor buscarP(String CodigoP) {
        Iterator<cProveedor> ITP = ArregloP.iterator();
        cProveedor p = null;
        while (ITP.hasNext()) {
            cProveedor P = ITP.next();
            if (P.getCodigoProveedorP().equals(CodigoP)) {
                p = P;
            }
        }
        return p;
    }

    private void setteo() {
        tCodigoP.setText("");
        tNitP.setText("");
        tNombreP.setText("");
        tDireccionP.setText("");
        tCelularP.setText("");
        tCodigoP.requestFocus(); //Solicita la colocacion del cursor en el campo de texto Nit
    }

    private boolean eliminarP(cProveedor e) {
        boolean flag = false;
        try {
            Iterator<cProveedor> ITP = ArregloP.iterator();
            while (ITP.hasNext()) {
                cProveedor P = ITP.next();
                if (P.getCodigoProveedorP().equals(e.getCodigoProveedorP())) {
                    ITP.remove();
                    flag = true;
                    crearbinario();
                }
            }
        } catch (Exception error) {
            flag = false;
            System.out.println("El Erro fue:" + error.getMessage());
        }

        return flag; //Flag es igual a true solo si lo removio dentro del void
    }

    private boolean buscarN(String e) {
        boolean flag = false;
        try {
            Iterator<cProveedor> ITP = ArregloP.iterator();
            while (ITP.hasNext()) {
                cProveedor P = ITP.next();
                if (P.getNombreProveedor().equals(e)) {

                    flag = true;
                }
            }
        } catch (Exception error) {
            flag = false;
            System.out.println("El Erro fue:" + error.getMessage());
        }

        return flag; //Flag es igual a true solo si lo removio dentro del void
    }

    private boolean modificarP(cProveedor m) {
        boolean flag = false;
        try {
            Iterator<cProveedor> ITP = ArregloP.iterator();
            while (ITP.hasNext()) {
                cProveedor P = ITP.next();
                if (P.getNitProveedor().equals(m.getNitProveedor())) {
                    flag = true;
                    P.setCodigoProveedorP(tCodigoP.getText());
                    P.setNitProveedor(tNitP.getText());
                    P.setNombreProveedor(tNombreP.getText());
                    P.setDireccionProveedor(tDireccionP.getText());
                    P.setCelularProveedor(tCelularP.getText());
                    crearbinario();
                }
            }
        } catch (Exception error) {
            flag = false;
            System.out.println("El Error fue:" + error.getMessage());
        }

        return flag; //Flag es igual a true solo si lo removio dentro del void
    }

    private void html() {

        BufferedWriter ficheroSalida;
        try {
            String rows = "";
            Iterator<cProveedor> ITP = ArregloP.iterator();

            ficheroSalida = new BufferedWriter(new FileWriter(new File("ReporteP.html")));
            while (ITP.hasNext()) {
                cProveedor P = ITP.next();
                rows = rows + "            <tr>\n"
                        + "                <td>" + P.getCodigoProveedorP() + "</td>\n"
                        + "                <td>" + P.getNitProveedor() + "</td>\n"
                        + "                <td>" + P.getNombreProveedor() + "</td>\n"
                        + "                <td>" + P.getDireccionProveedor() + "</td>\n"
                        + "                <td>" + P.getCelularProveedor() + "</td>\n"
                        + "            </tr>";
            }
            ficheroSalida.write("<!DOCTYPE html>\n"
                    + "<html lang=\"en\">\n"
                    + "\n"
                    + "<head>\n"
                    + "    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n"
                    + "        integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n"
                    + "    <meta charset=\"UTF-8\">\n"
                    + "    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n"
                    + "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n"
                    + "    <title>Reportes</title>\n"
                    + "</head>\n"
                    + "\n"
                    + "<body class=\"p-4\">\n"
                    + "    <table class=\"w-100 table table-dark table-hover\">\n"
                    + "        <thead>\n"
                    + "            <tr>\n"
                    + "                <th>Codigo</th>\n"
                    + "                <th>Nit</th>\n"
                    + "                <th>Nombre</th>\n"
                    + "                <th>Direccion</th>\n"
                    + "                <th>Celular</th>\n"
                    + "            </tr>\n"
                    + "        </thead>\n"
                    + "        <tbody>\n"
                    + rows
                    + "        </tbody>\n"
                    + "    </table>\n"
                    + "</body>\n"
                    + "\n"
                    + "</html>");
            ficheroSalida.close();
        } catch (IOException error) {
            System.out.println("El Error fue:" + error.getMessage());
        }
    }

    public static void leerbinario() {
        FileInputStream fis = null;
        ObjectInputStream ois = null;

        try {

            fis = new FileInputStream("bProveedores.dat");
            ois = new ObjectInputStream(fis);
            ArregloP = (ArrayList<cProveedor>) ois.readObject(); //es necesario el casting

        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        } catch (ClassNotFoundException e) {
            System.out.println(e.getMessage());
        } catch (IOException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (fis != null) {
                    fis.close();
                }
                if (ois != null) {
                    ois.close();
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
    }

    private void crearbinario() {
        FileOutputStream fos = null;
        ObjectOutputStream ous = null;

        try {
            //Se crea el fichero
            fos = new FileOutputStream("bProveedores.dat");
            ous = new ObjectOutputStream(fos);

            //Se escribe el objeto en el fichero
            ous.writeObject(ArregloP);

        } catch (FileNotFoundException e) {
            System.out.println("1" + e.getMessage());
        } catch (IOException e) {
            System.out.println("2" + e.getMessage());
        } finally {
            try {
                if (fos != null) {
                    fos.close();
                }
                if (ous != null) {
                    ous.close();
                }
            } catch (IOException e) {
                System.out.println("3" + e.getMessage());
            }
        }
    }

}
